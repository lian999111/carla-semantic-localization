## Defines parameters for vision algorithms

## Parameters for lane detection
lane:
  arrow_removal:
    # Minimum bounding box area
    min_box_area: 600
    # Maximum bounding box area
    max_box_area: 10000
    # Minimum witdh to height ratio
    min_w2h_ratio: 0.15
    # Maximum witdh to height ratio
    max_w2h_ratio: 6.66
    # Minimum area
    min_area: 350
    # Minimum occupation ratio (valid #pixels / bounding box area)
    min_occup_ratio: 0.25
    # Maximum occupation ratio
    max_occup_ratio: 0.7

  dilation:
    # Number of dilation operation iteration for edge image
    n_iters: 1

  rotation:
    # Scale to decrease image height considered based on yaw rate
    # Decrease vertical region with increasing yaw rate
    yaw_rate_scale_h: 250
    # Scale to increase horizontal image region considered based on yaw rate
    # Increase left when yaw rate is positive. Increase right when yaw rate is negative.
    yaw_rate_scale_w: 120
    # Ratio of the image height within which Hough lines are found
    # e.g. 0.5 means only the region from bottom to half height of the image are considered
    hough_region_h: 0.5
    # Ratio of the image width within which Hough lines are found
    # It starts from the center
    hough_region_w: 0.5
    # Threshold for HoughLines
    hough_thres: 280
    # Threshold to decide whether to rotate image to make lane markings more vertical
    # The algorithm uses Hough transform to find lines in the images
    # The magnitude of the mdeian angle of the found lines are compared with this threshold
    rot_thres: 2  # (deg)

  histo:
    # Minimum height to consider as a peak
    required_height: 200
    # Ratio of the image height that takes part in histogram calculation
    # e.g. 0.5 means only the region from bottom to half height of the image are searched
    # Since histogram is for finding starting points for sliding window, it should focus on on the lower part of image
    histo_region: 0.5
    # Bin number
    n_bins: 60

  sliding_window:
    # Number of sliding windows for lane pixel searching
    n_windows: 10
    # Ratio of the image height that takes part in sliding window search
    # e.g. 0.5 means only the region from bottom to half height of the image are searched
    # The higher the ratio, the farther lane can be detected, but also more error prone
    search_region: 0.6
    # Margin (half width) of sliding window
    margin: 20
    # Minimum number of detected pixels in a window to recenter the next window
    recenter_minpix: 50
    # The following 2 parameters are for detecting if the lane marking is spliting or merging in a window
    # First the max and min x are found. If the difference between max_x and min_x are large and the corresponding y values are close,
    # it is likely to be an Y shape. A horizontal line also fulfill this criterion, but it is rarely seen during driving.
    # Minimum required horizontal gap betwee the coordiantes of the left and right most points in the window
    # If the gap is beyond this threshold, it is likely the marking is spliting or merging
    # y-coordinates should then be checked using recenter_y_gap
    recenter_h_gap: 20
    # Minimum required vertical gap between the coordiantes of the left and right most points in the window
    # If the gap is below this threshold, it is likely the marking is spliting or merging
    # The the recenter should rely on the other side
    recenter_v_gap: 10

  fitting:
    # Ratio of number of samples to number of total points
    # e.g. 0.1 means taking 100 samples from 1000 points
    sampling_ratio: 1.0
    # Order of polynomial
    order: 2

## Parameters for pole detection
pole:
  # The pole detection algorithm finds bounding boxes aroung connected pole labels beneath the vanish point
  # Minimum height of the bounding box around a pole
  min_height: 20
  # Minimum width of the bounding box around a pole
  min_width: 0
  # Maximum width of the bounding box around a pole
  max_width: 50